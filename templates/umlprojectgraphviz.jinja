// https://stackoverflow.com/questions/9251556/problems-with-designing-uml-like-diagrams-in-graphviz
//http://www.ffnn.nl/pages/articles/media/uml-diagrams-using-graphviz-dot.php
//https://www.spinellis.gr/umlgraph/doc/indexw.html
digraph G {

    graph [
        compound = true     // To clip the head at the cluster border
        penwidth = 2        // Make the cluster's borders a bit thicker
        rankdir = "LR"      // Make the arrow and nodes go from Left to Right
        ranksep = 1         // Add a bit more space inbetween nodes
    ]

    node [
        color = none        // Hide the node's border
        //fontname = "Bitstream Vera Sans"
        height = 0          // Make the node as small as possible (it will grow if it needs more space)
        margin = 0          // Remove unneeded whitespace
        shape = "record"    // So we can use ports
    ]

    edge [
        arrowhead = "open"
        labelangle = -5     // Place the asteriks closer to the line
        labeldistance = 2.5 // Place the asteriks further away from the arrow head
        penwidth = 2        // Make the line a bit thicker
    ]

    /* @NOTE: escaping spaces in the label using '\' doesn't work so use '&nbsp' or '&#92' instead. */
    
    
{% for class in ds.classes %}
{# class #}

    subgraph cluster_{{class['class']['name']}}{
        {{class['class']['name']}} [
            label = "
            <{{class['class']['name'].lower()}}> \N\l |
            |
{# private fields #}
{% for field in class.fields.data %}
            <{{ field[0] }}> - {{ field[0] }} : {{field[1]}}\l |
{% endfor %}
            |
{# makegetterssetters #}
{% if class['methods']['opts']['makegetterssetters'] %}
{% for field in class['fields']['data'] %}
            + set{{field[0].capitalize()}}() : {{field[1]}}\l |
            + get{{field[0].capitalize()}}() : {{field[1]}}\l |
{% endfor %}
{% endif %}
{# methods #}{% for method in class['methods']['data'] %}
            + {{ method[0] }}({{ method[1] }}) : {{ method[2] }}\l{% if loop.last is sameas False %} |{% endif %}

{% endfor %}
{# class footer #}
            "
        ]
    }

{% endfor %}


    
    
    
    
/*# https://en.wikipedia.org/wiki/Class_diagram#Relationships #*/
    
{% for relation in ds['aggregation'] %}

    // lhead allows us to point to the cluster's border instead of the node, as long as we add `compound = true` to the graph
    {{relation[0]}}:{{relation[1]}} -> {{relation[2]}}:{{relation[3]}} [
        arrowhead = "diamond",
        ltail = "cluster_{{relation[0]}}",
        lhead = "cluster_{{relation[2]}}",
        fillcolor="white"
    ]

{% endfor %}

{% for relation in ds['composition'] %}

    // lhead allows us to point to the cluster's border instead of the node, as long as we add `compound = true` to the graph
    {{relation[0]}}:{{relation[1]}} -> {{relation[2]}}:{{relation[3]}} [
        arrowhead = "diamond",
        ltail = "cluster_{{relation[0]}}",
        lhead = "cluster_{{relation[2]}}",
        fillcolor="black"
    ]

{% endfor %}

{% for relation in ds['inheritance'] %}

    // lhead allows us to point to the cluster's border instead of the node, as long as we add `compound = true` to the graph
    {{relation[0]}}:{{relation[1]}} -> {{relation[2]}}:{{relation[3]}} [
        arrowhead = "normal",
        ltail = "cluster_{{relation[0]}}",
        lhead = "cluster_{{relation[2]}}",
        fillcolor="white"
    ]

{% endfor %}

{% for relation in ds['dependency'] %}

    // lhead allows us to point to the cluster's border instead of the node, as long as we add `compound = true` to the graph
    {{relation[0]}}:{{relation[1]}} -> {{relation[2]}}:{{relation[3]}} [
        arrowhead = "vee",
        ltail = "cluster_{{relation[0]}}",
        lhead = "cluster_{{relation[2]}}",
        fillcolor="white"
    ]

{% endfor %}
}
